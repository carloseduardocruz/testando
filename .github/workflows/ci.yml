name: Versionamento

'on':
    pull_request:
        branches:
            - main
        types:
            - closed

jobs:
    version:
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        steps:
          - name: Checkout
            uses: actions/checkout@v2
          - name: Versionar
            uses: paulhatch/semantic-version@v5.3.0
            with:
              # The prefix to use to identify tags
              tag_prefix: "v"
              # A string which, if present in a git commit, indicates that a change represents a
              # major (breaking) change, supports regular expressions wrapped with '/'
              major_pattern: "BREAKING CHANGE:"
              # A string which indicates the flags used by the `major_pattern` regular expression. Supported flags: idgs
              minor_pattern: "fix("
              # A string to determine the format of the version output
              version_format: "${major}.${minor}.${patch}-prerelease${increment}"
              # Named version, will be used as suffix for name version tag
              namespace: my-service
              # If this is set to true, *every* commit will be treated as a new version.
              bump_each_commit: false
              # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
              search_commit_body: false
              # The output method used to generate list of users, 'csv' or 'json'.
              user_format_type: "json"
              # Prevents pre-v1.0.0 version from automatically incrementing the major version.
              # If enabled, when the major version is 0, major releases will be treated as minor and minor as patch. Note that the version_type output is unchanged.
              enable_prerelease_mode: true
              # If enabled, diagnostic information will be added to the action output.
              debug: false
              # If true, the branch will be used to select the maximum version.
              version_from_branch: false
          - name: config user
            run: |
                git config --global user.email "devops@roit.com.br"
                git config --global user.name "DevOps Squad | ROIT"
        
          - name: Commit
            run: |
                git add .
                git commit -m "Atualizar vers√£o"
        
          - name: Push
            run: |
                git push origin main